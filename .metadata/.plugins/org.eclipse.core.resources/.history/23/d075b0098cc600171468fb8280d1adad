package com.MySpringMVC.controller;

import java.io.File;
import java.io.IOException;
import java.util.Iterator;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.multipart.commons.CommonsMultipartResolver;

@Controller
public class Hello {

    /**
     * 1. 使用 @RequestMapping 注解来映射请求的 URL
     * 2. 返回值会通过视图解析器解析为实际的物理视图, 对于 InternalResourceViewResolver 视图解析器, 会做如下的解析:
     * 通过 prefix + returnVal + 后缀 这样的方式得到实际的物理视图, 然会做转发操作
     * 
     * /WEB-INF/views/success.jsp
     * 
     * @return
     */
    @RequestMapping("/helloworld")
    public String hello(){
        System.out.println("hello world!");
        return "success";
    }
    
    @RequestMapping("/FileUpload")
    public String SpringFileUpload(HttpServletRequest request) throws IllegalStateException, IOException{
    	long  startTime=System.currentTimeMillis();
        //将当前上下文初始化给  CommonsMutipartResolver （多部分解析器）
    	CommonsMultipartResolver multipartResolver=new CommonsMultipartResolver(
    			request.getSession().getServletContext());
    	//检查form中是否有enctype="multipart/form-data"
        if(multipartResolver.isMultipart(request))
        {
        	//将request变成多部分request
        	MultipartHttpServletRequest multiRequest=(MultipartHttpServletRequest)request;
        	//获取multiRequest 中所有的文件名
        	Iterator iter=multiRequest.getFileNames();
        	
        	while(iter.hasNext())
        	{
        		//一次遍历所有文件
        		MultipartFile file=multiRequest.getFile(iter.next().toString());
        		if(file!=null)
        		{
        			String path="E:/springUpload"+file.getOriginalFilename();
        			//上传
        			file.transferTo(new File(path));
        		}
        	}
        }
        long  endTime=System.currentTimeMillis();
        System.out.println("方法三的运行时间："+String.valueOf(endTime-startTime)+"ms");
    	return "springFileUpload";
    }
}